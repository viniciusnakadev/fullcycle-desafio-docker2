services:

  app:
    build:
      context: ./node
    #  dockerfile: Dockerfile
    #image: viniciusnakadev/node
    depends_on:
        db:
          condition: service_healthy
    container_name: node
    environment:
      MYSQL_HOST: db
      MYSQL_USER: vinicius
      MYSQL_PASSWORD: viniciusnakadev
      MYSQL_DATABASE: nodedb
    networks:
      - node-network
    #volumes:
    #  - ./node:/usr/src/app
    tty: true
    #healthcheck:
    #  test: ["CMD", "curl", "f", http://localhost:3000"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 3

####################################

  db:
    image: mysql:latest
    container_name: db-mysql
    command: --innodb-use-native-aio=0
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-network
    ports:
      - "3306:3306"

####################################

  nginx:
    #build:
    #  context: ./nginx
      #dockerfile: Dockerfile
    image: nginx:latest
    container_name: nginx
    tty: true
    networks:
      - node-network
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf    
    #restart: always
    depends_on:
      - app
    #     condition: service_healthy

####################################

networks:
  node-network:
    driver: bridge